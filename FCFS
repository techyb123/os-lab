#include <stdio.h>

struct process {
    int arrival_time;
    int burst_time;
    int completion_time;
    int waiting_time;
    int turn_around_time;
};

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct process p[n];
    int i;

    printf("Enter the arrival time and burst time for each process:\n");
    for (i = 0; i < n; i++) {
        printf("Process %d:\n", i+1);
        printf("Arrival Time: ");
        scanf("%d", &p[i].arrival_time);
        printf("Burst Time: ");
        scanf("%d", &p[i].burst_time);
    }

    // Sort the processes based on arrival time
    for (i = 0; i < n; i++) {
        for (int j = i+1; j < n; j++) {
            if (p[i].arrival_time > p[j].arrival_time) {
                struct process temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }

    // Calculate the completion time, waiting time, and turn-around time for each process
    p[0].completion_time = p[0].arrival_time + p[0].burst_time;
    p[0].waiting_time = 0;
    p[0].turn_around_time = p[0].burst_time;

    for (i = 1; i < n; i++) {
        p[i].completion_time = p[i-1].completion_time + p[i].burst_time;
        p[i].waiting_time = p[i-1].completion_time - p[i].arrival_time;
        p[i].turn_around_time = p[i].completion_time - p[i].arrival_time;
    }

    // Print the results
    printf("\nProcess\tArrival Time\tBurst Time\tWaiting Time\tTurn-Around Time\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n", i+1, p[i].arrival_time, p[i].burst_time, p[i].waiting_time, p[i].turn_around_time);
    }

    // Calculate the average waiting time and average turn-around time
    int total_waiting_time = 0;
    int total_turn_around_time = 0;
    for (i = 0; i < n; i++) {
        total_waiting_time += p[i].waiting_time;
        total_turn_around_time += p[i].turn_around_time;
    }

    float avg_waiting_time = (float)total_waiting_time / n;
    float avg_turn_around_time = (float)total_turn_around_time / n;

    printf("\nAverage Waiting Time: %.2f\n", avg_waiting_time);
    printf("Average Turn-Around Time: %.2f\n", avg_turn_around_time);

    return 0;
}
